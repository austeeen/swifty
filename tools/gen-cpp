#!/bin/bash

set -x

SRC_ROOT="./src"

usage () {
    echo "gen-cpp [OPTIONS] [FILE_PATH] [HEADER_GUARD]"
    echo "  generate a basic hpp/cpp file"
    echo "[OPTIONS]"
    echo "  -c|--class [CLS_NAME] ) create a class named CLS_NAME and generate a basic class empty class"
    echo "  -h|--help ) display help"
}

HPP_OPT_TEXT=""
CPP_OPT_TEXT=""

create_class() {
    HPP_OPT_TEXT="class $1
{
public:
    $1();

private:
    // members
};"

    CPP_OPT_TEXT="$1::$1(){}"

}


if [[ $# -lt 2 ]]; then
    echo "ERROR: not enough arguments!"
    usage
    quit 1
fi

while [[ $# -gt 2 ]]
do
    case "$1" in
        -c|--class)
            create_class $2
            shift
            shift;;
        *)
            usage
            exit 1;;
    esac
done

FULL_FP=$SRC_ROOT/$1
FILE_NAME="$(basename $FULL_FP)"
HPP_GUARD=$2

HPP_FP="$FULL_FP.hpp"
CPP_FP="$FULL_FP.cpp"

HPP_TXT="#ifndef $HPP_GUARD
#define $HPP_GUARD

#include \"common.hpp\"

$HPP_OPT_TEXT

#endif // $HPP_GUARD"

CPP_TXT="#include \"$FILE_NAME.hpp\"

$CPP_OPT_TEXT
"

touch $HPP_FP
touch $CPP_FP

echo "$HPP_TXT" > $HPP_FP
echo "$CPP_TXT" > $CPP_FP
